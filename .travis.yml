dist: xenial
sudo: required
language: python
python:
  - '3.5'
  - '3.6'
  - '3.7'
  - '3.8'
  - 'pypy3'

cache:
  - apt
  - pip

notifications:
  email:
    on_failure: never

before_install:
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list"
  - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
  - sudo apt-get update

install:
  - cat install.txt | xargs sudo apt-get install -y
  - cat ros-deps.txt | xargs sudo apt-get install -y
  - pip install -r requirements.txt
  - sudo rosdep init
  - rosdep update

# This stage is run against everything in the matrix (so every python version)
script:
  - pip install tox
  # Borrowed from flask-mongoengine
  - tox -e $(echo py$TRAVIS_PYTHON_VERSION | tr -d . | sed -e 's/pypypy/pypy/' | sed -e 's/-dev//')
  # Forces unit tests to take non-standard paths through code.
  - cp tests/plugins/tool/clang-format_tool_plugin/different-clang-format.cfg ~/.clang-format


jobs:
  include:
      # This adds a second parallel "test" stage (since we didn't specify
      # the stage name) just to run statick
    - stage: self_check
      python: '3.5'
      script: ./statick . --profile self_check.yaml
      # Force this to only run for one Python version
    - stage: documentation
      python: '3.5'
      install:
        - pip install -r requirements.txt
        - pip install -r requirements-docs.txt
      script:
        - travis-sphinx build
        - travis-sphinx deploy
    - stage: deploy
      provider: pypi
      user: tdenewiler
      password:
        secure: t4ewjCNq1cFlWrdz+dapN1FlGSi7HHZVlErDuVFJuVFeuBxcVOyDLoRhbcZsX4/bAirM5DAWKfR+MiucZ/Ut8D0r3YFjvyaf9FfnXlKCt0Z3V/FxwADsy489dDjY7M7H+2563k4NyR03rXO/0qsU/An1fROv0buycLA2+PwuYPUeM0eRwuYPgSDyL+84AYPHVqwU8p0VKw4Z58iGVzyzpy3tZN4jxne+bO8tXf+qj7lC1Oi53/kJvhG5XvdI8lIPZv6KyO4t7lNzrniS6+SbNQqFSYrJ0zh28iXhoA3iM0u2YbKvRcc2CduwQzykwzIMWlCRrvrRBsePpuDT4k9VDXeOaNbu5ZxLY87bZWsld/549itidtqjF1So8tcgdAS5aO1O6G4BqfXXIhBdRHKxiUrm2h28ubXq4eHvDjxXpE7YLMN2jiXptTXX5zVRo9gkCv4UPk/Ugsk2XQ234UByq3aQjgiFDreBh5SCqzEQtUgY10neoKsG0kigrAYMJH0xMxhr00mPXMWJI9dumGilSI/Cz1uQmXuMqBxXg2IwAfulBDG6rsYCHSw0mFJvFEqt5ifnyP9WtHozc3PHWY2+1RLlzCpEnezHyRWZ4HrcPSWUKdHy9INczOQ9U2G1MH1cXOgZ0+rnHMdtsg+mbo+Y/A9mbiVyLcxgznoE1fSsYI0=
      on:
        tags: true
      skip_existing: true
