diff --git a/statick_tool/plugins/tool/black_tool_plugin.py b/statick_tool/plugins/tool/black_tool_plugin.py
index 9d4d466..d34d0b0 100644
--- a/statick_tool/plugins/tool/black_tool_plugin.py
+++ b/statick_tool/plugins/tool/black_tool_plugin.py
@@ -67,7 +67,9 @@ class BlackToolPlugin(ToolPlugin):
         tool_re_reformat = r"(.+)\s(.+)\s(.+)"
         parse_reformat = re.compile(tool_re_reformat)  # type: Pattern[str]
         tool_re_error = r"\w+:\s(.+):\s(.+):\s(.+):\s(.+)"
-        parse_error = re.compile(tool_re_error)  # type: Pattern[str]
+        parse_tool_error = re.compile(tool_re_error)  # type: Pattern[str]
+        tool_re_parse_error = r"\w+:\s(.+):\s(.+):\s([0-9]+):([0-9]+):\s(.+)"
+        parse_error = re.compile(tool_re_parse_error)  # type: Pattern[str]
         issues = []
 
         for output in total_output:
@@ -87,16 +89,29 @@ class BlackToolPlugin(ToolPlugin):
                             )
                         )
                 if line.startswith("error"):
-                    match_error = parse_error.match(line)  # type: Optional[Match[str]]
-                    if match_error:
+                    match_tool_error = parse_tool_error.match(line)  # type: Optional[Match[str]]
+                    match_parse_error = parse_error.match(line)  # type: Optional[Match[str]]
+                    if match_parse_error:
                         issues.append(
                             Issue(
-                                match_error.group(1).split(" ")[2].rstrip(":"),
+                                match_parse_error.group(1).split(" ")[2].rstrip(":"),
+                                match_parse_error.group(3),
+                                self.get_name(),
+                                "format",
+                                "3",
+                                match_parse_error.group(2) + " " + match_parse_error.group(5),
+                                None,
+                            )
+                        )
+                    elif match_tool_error:
+                        issues.append(
+                            Issue(
+                                match_tool_error.group(1).split(" ")[2].rstrip(":"),
                                 "0",
                                 self.get_name(),
                                 "format",
                                 "3",
-                                match_error.group(3),
+                                match_tool_error.group(3),
                                 None,
                             )
                         )
diff --git a/tests/plugins/tool/black_tool_plugin/test_black_tool_plugin.py b/tests/plugins/tool/black_tool_plugin/test_black_tool_plugin.py
index 6451136..6b2d1d0 100644
--- a/tests/plugins/tool/black_tool_plugin/test_black_tool_plugin.py
+++ b/tests/plugins/tool/black_tool_plugin/test_black_tool_plugin.py
@@ -101,6 +101,16 @@ def test_black_tool_plugin_parse_valid():
     assert issues[0].severity == "3"
     assert issues[0].message == "message"
 
+    output = "error: cannot format /home/user/file: Cannot parse: 1:3: invalid syntax"
+    issues = btp.parse_output([output])
+    assert len(issues) == 1
+    assert issues[0].filename == "/home/user/file"
+    assert issues[0].line_number == "1"
+    assert issues[0].tool == "black"
+    assert issues[0].issue_type == "format"
+    assert issues[0].severity == "3"
+    assert issues[0].message == "Cannot parse invalid syntax"
+
 
 def test_black_tool_plugin_parse_invalid():
     """Verify that we can parse the normal output of black."""

