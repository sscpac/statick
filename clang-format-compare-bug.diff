commit 90394de433a250c9a4384834828f2279c5037e06
Author: Alexander Xydes <alexander.xydes@navy.mil>
Date:   Mon Aug 27 16:17:49 2018 -0700

    ATIASSC-1607: Changing clang-format plugin to compare user paths clang format file directly to the one in the user's home dir instead of clang-format --dump-config. This is because the dump-config option doesn't handle multiple languages in the .clang-format file, it only outputs one language's configuration at a time.

diff --git a/statick_tool/plugins/tool/clang_format_tool_plugin.py b/statick_tool/plugins/tool/clang_format_tool_plugin.py
index c888db4..c10a18f 100644
--- a/statick_tool/plugins/tool/clang_format_tool_plugin.py
+++ b/statick_tool/plugins/tool/clang_format_tool_plugin.py
@@ -6,6 +6,7 @@ import subprocess
 import shlex
 import re
 import difflib
+import os
 
 from statick_tool.tool_plugin import ToolPlugin
 from statick_tool.issue import Issue
@@ -56,18 +57,17 @@ class ClangFormatToolPlugin(ToolPlugin):
         total_output = []
 
         try:
-            output = subprocess.check_output([clang_format_bin,
-                                              "--dump-config"],
-                                             stderr=subprocess.STDOUT)
             format_file_name = self.plugin_context.resources.get_file(".clang-format")
-            with open(format_file_name, "r") as format_file:
+            with open(os.path.expanduser("~/.clang-format"), "r") as home_format_file, \
+                 open(format_file_name, "r") as format_file:
+                actual_format = home_format_file.read()
                 target_format = format_file.read()
-            diff = difflib.context_diff(output.split("\n"),
-                                        target_format.split("\n"))
+                diff = difflib.context_diff(actual_format.split("\n"),
+                                            target_format.split("\n"))
             for line in diff:
-                if line.startswith("+ ") or line.startswith("- ") or \
-                   line.startswith("! "):
-                    if len(line) <= 2 or line[2:].strip()[0] != "#":
+                if (line.startswith("+ ") or line.startswith("- ") or \
+                           line.startswith("! ")) and len(line) > 2:
+                    if line[2:].strip()[0] != "#":
 # pylint: disable=line-too-long
                         exc = subprocess.CalledProcessError(-1,
                                                             clang_format_bin,
@@ -85,8 +85,7 @@ class ClangFormatToolPlugin(ToolPlugin):
 
         except subprocess.CalledProcessError as ex:
             output = ex.output
-            print("clang-format failed! Returncode = {}".
-                  format(str(ex.returncode)))
+            print("clang-format failed! Returncode = {}".format(str(ex.returncode)))
             print("{}".format(ex.output))
             return None
 
@@ -98,9 +97,9 @@ class ClangFormatToolPlugin(ToolPlugin):
             for output in total_output:
                 print("{}".format(output))
 
-        with open(self.get_name() + ".log", "w") as f:
+        with open(self.get_name() + ".log", "w") as log_file:
             for output in total_output:
-                f.write(output)
+                log_file.write(output)
 
         issues = self.parse_output(total_output)
         return issues
