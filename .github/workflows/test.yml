---
name: Statick

on: # NOLINT
  pull_request:
  push:
  schedule:
    - cron: '0 10 * * MON'
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install .[test]
          pip install .[docs]

      # Remove apt repos that are known to break from time to time.
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Remove broken apt repos [Ubuntu]
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04'
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done

      - name: Install tools (Linux)
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install cccc
          sudo apt-get install clang
          sudo apt-get install clang-format
          sudo apt-get install clang-tidy
          sudo apt-get install cppcheck
          sudo apt-get install libpcre3-dev
          sudo apt-get install libperl-critic-perl
          sudo apt-get install libxml2
          sudo apt-get install libxml2-utils
          sudo apt-get install shellcheck
          sudo apt-get install uncrustify

      - name: Install clang tools (for unit tests)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install clang-format-14
          sudo apt-get install clang-tidy-14

      - name: Install node tools
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04'
        run: |
          npm install -g markdownlint-cli@0.21.0
          npm install -g npm-groovy-lint

      - name: Test with mypy
        run: |
          mypy --ignore-missing-imports --strict src/statick_tool/

      # Re-enable this step when statick-md switches from yapsy to entry points plugin approach.
      # - name: Statick markdown
      #   if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04'
      #   run: |
      #     pip install statick-md
      #     statick . --check --profile documentation.yaml

      - name: Sphinx lint
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu.22.04'
        uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: 'docs/'

      - name: Test with tox
        run: |
          python -m tox

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Self check
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04'
        run: |
          mkdir statick-output
          statick . --output-directory statick-output --check --profile self_check.yaml --log INFO
