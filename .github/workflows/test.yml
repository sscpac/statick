---
name: Statick

on: [pull_request, push]  # NOLINT

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-18.04, ubuntu-20.04, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v1
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: actions/cache@v1
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: actions/cache@v1
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
          python -m pip install --upgrade mypy
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade tox
          python -m pip install --upgrade tox-gh-actions
          python -m pip install --upgrade wheel

      # Remove apt repos that are known to break from time to time.
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Remove broken apt repos [Ubuntu]
        if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done

      - name: Install tools (Linux)
        if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt update
          sudo apt install cccc
          sudo apt install clang
          sudo apt install clang-6.0
          sudo apt install clang-format-6.0
          sudo apt install clang-tidy-6.0
          sudo apt install cppcheck
          sudo apt install libpcre3-dev
          sudo apt install libperl-critic-perl
          sudo apt install libxml2
          sudo apt install libxml2-utils
          sudo apt install shellcheck
          sudo apt install uncrustify

      - name: Install clang tools (for unit tests)
        if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt update
          sudo apt install clang-format
          sudo apt install clang-tidy

      # Have to install newer version from non-apt source due to SSL library compatibility issues.
      - name: Install node
        if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt install curl
          curl -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.sh
          sudo bash nodesource_setup.sh
          sudo apt install nodejs
          sudo npm install -g n
          sudo n stable
          sudo npm install -g markdownlint-cli@0.21.0
          rm nodesource_setup.sh

      - name: Test with mypy
        run: |
          mypy --ignore-missing-imports --strict statick statick_tool/

      - name: Statick markdown
        if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
        run: |
          statick . --check --profile documentation.yaml

      - name: Sphinx lint
        if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
        uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"

      - name: Test with tox
        run: |
          python -m tox

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

      - name: Self check
        if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
        run: |
          mkdir statick-output
          ./statick . --output-directory statick-output --check --profile self_check.yaml --log INFO
